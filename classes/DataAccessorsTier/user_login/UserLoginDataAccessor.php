<?php

require_once DB_CONNECTION . 'DBHelper.php';
require_once BUSINESS_DIR_USER . 'User.php';
require_once BUSINESS_DIR_RESET . 'password_reset.php';
//has constants for the table; USER
require_once(DB_CONNECTION . 'datainfo.php');
require PHP_MAILER.'PHPMailerAutoload.php';



//require_once('../../plug-in/email/email_password.php');


class UserLoginDataAccessor {
  /* -------------------------------
    for search
    20. create new instance of database helper
    30. pass a query statment and get the data
    40. returns the user
    ------------------------------ */

  public function user_Login($loginid, $pwd) {
    $user = new User();

    $query = "SELECT * FROM " . USER . " WHERE usr_login =  '$loginid' and usr_password = '$pwd'";

    $dbHelper = new DBHelper(); // 20
    $result = $dbHelper->executeSelect($query); // 30
    $user = $this->getUser($result);
    return $user;
  }

  public function ForgotPassword($email) {
    $reset = false;

    //some random text to be shuffled and generated by the user
    $random_text = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@.()";

    //TO SHUFFLE THE ABOVE TEXT AND PIC 10 CHARS.
    $substr = substr(str_shuffle($random_text), 0, 10);

    $user = new User();
    $query = "SELECT * FROM " . USER . "  WHERE usr_email =  '$email' ";
    $dbHelper = new DBHelper();
    $result = $dbHelper->executeSelect($query); // 30
    $user = $this->getUser($result);
    $userid = $user->getLogin();
    $username = $user->getFirstName();
    $date = date("Y/m/d");

    if ($user) {

      //PASSWORD_RESET Email to be sent to the user, a function called email, if email is sent then do the things below
      if ($this->email($email, $username, $substr,null)) {

        //PASSWORD_RESET, a table that carries the user password forgot request
        $query_insert = "INSERT INTO PASSWORD_RESET VALUES('','$substr','$userid', '$date',0)";

        //connection to the database
        $dbHelper = new DBHelper();

        //returning the connection result
        $result = $dbHelper->executeQuery($query_insert);
        if ($result)
          $reset = true;
      }
      //$last_inserted_id = mysql_insert_id();
    }


    return $reset;
  }

  public function deleteRequestCode($user_id){

    if(isset($user_id)){

    //object that holds the password and user id for the resetter  
    //Retrieving the data from the table, based on the data sent
    $Reset = new ResetPassword();

     $query = "DELETE FROM  " .PASSWORD_RESET. " WHERE user_id = '".$user_id."'";

    $dbHelper = new DBHelper();

    $result = $dbHelper->executeSelect($query); // 30

    }

    return $result;
  }


  public function updateRequestCode($reset_code){

    if(isset($reset_code)){

    //object that holds the password and user id for the resetter  
    //Retrieving the data from the table, based on the data sent
    $Reset = new ResetPassword();

     $query = "UPDATE " .PASSWORD_RESET. " SET
      requested    = '1' WHERE reset_code = '".$reset_code."'";

    $dbHelper = new DBHelper();

    $result = $dbHelper->executeSelect($query); // 30

    //getting the object of PasswordReset
   // $Reset = $this->getReset($result);

    }

    return $result;
  }

  public function LoginReset($resetcode){

    if(isset($resetcode)){

    //object that holds the password and user id for the resetter  
    //Retrieving the data from the table, based on the data sent
    $Reset = new ResetPassword();
    $query = "SELECT * FROM " . PASSWORD_RESET . "  WHERE reset_code =  '$resetcode' ";

    $dbHelper = new DBHelper();
    $result = $dbHelper->executeSelect($query); // 30

    //getting the object of PasswordReset
    $Reset = $this->getReset($result);

    }

    return $Reset;
  }

  /* -------------------------------
    To be moved to bottom later, private to be accessed by member functions only
    ------------------------------ */

    private function getReset($selectResult) {

    $pwdreset = new ResetPassword();
    $count = 0;

    while ($list = mysqli_fetch_assoc($selectResult)) {

      $pwdreset->setResetId($list['id']);
      $pwdreset->setResetCode($list['reset_code']);
      $pwdreset->setResetUser($list['user_id']);
      $pwdreset->setResetDate($list['date']);
      $pwdreset->setResetRequest($list['requested']);
      
    }

    return $pwdreset;
  }

  private function getUser($selectResult) {

    $User = new User();
    $count = 0;

    while ($list = mysqli_fetch_assoc($selectResult)) {

      $User->setUserId($list['usr_user_id']);
      $User->setFirstName($list['usr_first_name']);
      $User->setLastName($list['usr_last_name']);
      $User->setLogin($list['usr_login']);
      //$User->setUserRatingId($list['']);
      $User->setEmail($list['usr_email']);
      $User->setDOB($list['usr_DOB']);
      //$User->setLocation($list['']);
      $User->setRegistration_date($list['usr_registration_date']);
      $User->setUserType($list['usr_user_type_id']);
      $User->setUserLanguage($list['usr_language']);
      $User->setEmailSub($list['usr_email_subscribed']);
    }

    return $User;
  }

// end of getUser

  //A private function that takes, email,username and resetcode
  public function email($email, $username, $reset_code,$body_text) {


  //  echo $body_text;
    $mail = new PHPMailer;
    $body="Dear " . $username . "<br>A request has been made for resetting your password, if it was requested by you, please follow the link below and a
    a your new password will be sent to your email.<br> Link:" . PASSWORD_RESET_LOC . "?security= " . $reset_code . "<br><br>Tarboz Team";
    
    if($body_text!=null){

        $body=$body_text;
    }

    $mail->isSMTP();
    $mail->Host = "ssl://smtp.gmail.com"; 
    $mail->SingleTo = true;
    $mail->SMTPSecure = 'ssl';
    $mail-> Port = 465;
    $mail->SMTPAuth = true;
    $mail->Username = 'tarboz.com@gmail.com';
    $mail->Password = 'habibtarboz';
    $mail->From = 'tarboz.com@gmail.com';
    $mail->FromName = 'Tarboz.com Adminstration';
    $mail->addAddress($email, $username);
    $mail->addReplyTo('habibullah.zahoori@gmail.com', 'myInformation');
    $mail->WordWrap = 50;
    $mail->isHTML(true);
    $mail->Subject = 'Password Reset Request @ Tarboz.com';
    $mail->Body    = $body;
    

    //if Email was not sent it should return a true bool to the user
    if($mail->send()) {
      $mail->ClearAddresses();
       return true;
    }


    //successfully sent, then it should sent a true bool
    return false;

  }

}

?>